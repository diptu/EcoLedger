# File: infra/Dockerfile.prod
# ==============================
# Stage 1: Builder
# ==============================
FROM python:3.11-slim AS builder

WORKDIR /app

# Install minimal build dependencies (for compiling any wheels)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    libffi-dev \
    libpq-dev \
 && rm -rf /var/lib/apt/lists/*

# Upgrade pip and install UV package manager
RUN python -m pip install --upgrade pip && pip install uv

# Copy project metadata for caching
COPY pyproject.toml uv.lock ./

# Install production dependencies globally (no dev packages)
RUN uv sync --no-dev

# ==============================
# Stage 2: Runtime
# ==============================
FROM python:3.11-slim AS runtime

WORKDIR /app

# Copy only necessary source code
COPY app ./app
COPY alembic ./alembic
COPY main.py .
COPY infra ./infra

# Copy installed packages from builder to runtime
COPY --from=builder /usr/local/lib/python3.11/site-packages/ \
     /usr/local/lib/python3.11/site-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

# Remove unnecessary files to slim the image
RUN find /usr/local/lib/python3.11/site-packages/ -name "*.pyc" -delete \
 && find /usr/local/lib/python3.11/site-packages/ -name "__pycache__" -type d -exec rm -rf {} +

# Expose FastAPI port
EXPOSE 8000

# Run FastAPI app (production, no reload)
CMD ["uv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
