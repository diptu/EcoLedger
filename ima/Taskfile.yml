version: "3"

tasks:
  # -------------------------
  # Development Server
  # -------------------------
  start:
    desc: "Start the FastAPI server"
    cmds:
      - uv run uvicorn app.main:app --reload --port 8001


  # -------------------------
  # Kill processes
  # -------------------------
  kill-server-8000:
    desc: "Kill any process running on port 8000"
    cmds:
      - lsof -ti:8000 | xargs -r kill -9
  
  kill-server-8001:
    desc: "Kill any process running on port 8001"
    cmds:
      - lsof -ti:8001 | xargs -r kill -9

  kill-postgres:
    desc: "Kill any process running on port 5432"
    cmds:
      - lsof -ti:5432 | xargs -r kill -9

  kill-all:
    desc: "Kill processes running on ports 8000, 8001, and 5432"
    deps: [kill-server-8000, kill-server-8001, kill-postgres]

  # -------------------------
  # Tests
  # -------------------------
  test:
    desc: "Run all tests"
    cmds:
      - uv run pytest

  test-unit:
    desc: "Run only unit tests"
    cmds:
      - uv run pytest app/tests/unit/

  test-integration:
    desc: "Run only integration tests"
    cmds:
      - uv run pytest app/tests/integration/

  test-e2e:
    desc: "Run only end-to-end (e2e) tests"
    cmds:
      - uv run pytest app/tests/e2e/

  test-health:
    desc: "Run only health endpoint test"
    cmds:
      - uv run pytest app/tests/unit/test_health.py

  coverage:
    desc: "Run tests with coverage report"
    cmds:
      - uv run pytest --cov=app --cov-report=term-missing

  # -------------------------
  # Linting & Formatting
  # -------------------------
  lint:
    desc: "Lint the code using ruff"
    cmds:
      - uv run ruff check app

  pylint:
    desc: "Lint the code using pylint"
    cmds:
      - uv run pylint app

  lint-all:
    desc: "Run both ruff and pylint"
    deps: [lint, pylint]

  lint-fix:
    desc: "Automatically fix lint issues"
    cmds:
      - uv run ruff check app --fix

  format:
    desc: "Format code using black and isort"
    cmds:
      - uv run black . || (uv add --dev black && uv run black .)
      - uv run isort . || (uv add --dev isort && uv run isort .)

  fix:
    desc: "Auto-format and fix lint issues"
    deps: [format, lint-fix]

  typecheck:
    desc: "Type checking with mypy"
    cmds:
      - uv run mypy --ignore-missing-imports --follow-imports=skip app

  precommit:
    desc: "Run pre-commit hooks"
    cmds:
      - uv run pre-commit run --all-files

  # -------------------------
  # CI/CD
  # -------------------------
  ci:
    desc: "Run lint-all, typecheck, and tests (for CI/CD pipelines)"
    deps: [lint-all, typecheck, test]
